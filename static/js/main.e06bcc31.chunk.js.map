{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","about","type","id","defaultProps","TextForm","useState","text","setText","value","onChange","event","console","log","target","rows","onClick","newText","toUpperCase","newtext","toLowerCase","word","split","forEach","element","charAt","slice","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAGe,SAASA,EAAOC,GAC3B,OACI,mCACJ,sBAAKC,UAAU,8CAAf,UACF,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,QAE5C,mBAAGF,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACE,sBAAMJ,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACE,oBAAIL,UAAU,qBAAd,SACE,oBAAIA,UAAU,kBAAd,SACE,oBAAGA,UAAU,WAAWC,KAAK,IAA7B,kBAAsC,sBAAMD,UAAU,UAAhB,qCAgB9CF,EAAOQ,aAAe,CAClBJ,MAAO,iBACPC,MAAO,uB,WCjCI,SAASI,EAASR,GAE/B,IAuBA,EAAsBS,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAKA,OACK,qCACD,sBAAKV,UAAY,YAAjB,UAIE,6BAAKD,EAAMU,OAIX,sBAAKT,UAAU,aAAf,UACA,0BAAUA,UAAU,eAAeW,MAAOF,EAAMG,SA9BjC,SAACC,GACpBC,QAAQC,IAAI,aACZL,EAAQG,EAAMG,OAAOL,QA4BwDN,GAAG,8BAA8BY,KAAK,OAC/G,wBAAQjB,UAAY,4BAA4BkB,QApCzB,WAC3BJ,QAAQC,IAAI,gCAAkCN,GAC9C,IAAIU,EAAUV,EAAKW,cACnBV,EAAQS,IAiCJ,kCACA,wBAAQnB,UAAY,4BAA4BkB,QAzCzB,WAC3B,IAAIG,EAAUZ,EAAKa,cACnBZ,EAAQW,IAuCJ,kCACA,wBAAQrB,UAAY,4BAA4BkB,QA5B1B,WAC1B,IAAIK,EAAOd,EAAKe,MAAM,KACtBV,QAAQC,IAAIN,GACZ,IAAIU,EAAS,IACbI,EAAKE,SAAQ,SAACC,GACZP,GAAWO,EAAQC,OAAO,GAAGP,cAAcM,EAAQE,MAAM,GAAG,OAE9DlB,EAAQS,IAqBJ,2CAIF,sBAAKnB,UAAU,YAAf,UACA,8CACE,8BAAIS,EAAKe,MAAM,KAAKK,OAAO,EAA3B,cAAyCpB,EAAKoB,OAA9C,kBACA,8BAAI,MAASpB,EAAKe,MAAM,KAAKK,OAAO,GAApC,sBAKF,sBAAK7B,UAAU,YAAf,UACE,yCACA,4BAAIS,UCrCGqB,MApBf,WAIE,OACF,qCACI,cAAChC,EAAD,IACA,qBAAKE,UAAU,YAAf,SACA,cAACO,EAAD,CAAUE,KAAM,0BCCLsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e06bcc31.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n\r\n  <a className=\"navbar-brand\" href=\"/\">{props.about}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n     </ul>\r\n   \r\n  </div>\r\n</nav>\r\n        </>\r\n    ) \r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string,\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    about: 'set about us title '\r\n}\r\n\r\n ","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleLowercaseChange =()=>{\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n  }\r\n  const handleUpercaseChange = ()=>{\r\n    console.log(\"uppercase button was clicked \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  } \r\n  const handleChange = (event) => {\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const captilisedFirstWord = ()=>{\r\n    let word = text.split(\" \");\r\n    console.log(text);\r\n    let newText =\" \";\r\n    word.forEach((element)=>{\r\n      newText += element.charAt(0).toUpperCase()+element.slice(1)+\" \";\r\n    })\r\n    setText(newText);\r\n  }\r\n  const [text,setText] =useState(\"\");\r\n    \r\n  \r\n  \r\n  \r\n  return (\r\n       <>\r\n      <div className = \"mb-3 my-4\">\r\n\r\n\r\n\r\n        <h1>{props.text}</h1>\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleChange}  id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n        <button className = \"btn btn-primary my-2 mx-4\" onClick= {handleUpercaseChange}>Convert to uppercase</button>\r\n        <button className = \"btn btn-primary my-2 mx-4\" onClick= {handleLowercaseChange}>Convert to lowercase</button>\r\n        <button className = \"btn btn-primary my-2 mx-4\" onClick= {captilisedFirstWord}>Captilised First letter</button>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n      <h3>Text Summary</h3>\r\n        <p>{text.split(\" \").length-1} words and {text.length} characters </p>\r\n        <p>{0.008 * (text.split(\" \").length-1)} minute reads</p>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"container\">\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n\n\n\n  return (\n<>\n    <Navbar/>\n    <div className=\"container\">\n    <TextForm text =\"Enter Text here\"/> \n    </div>\n</>\n   \n\n\n\n\n\n   ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}